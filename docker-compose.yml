services:
  # API Gateway
  api-gateway:
    build: ./microservices/api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - REDIS_HOST=redis
    depends_on:
      - redis
    networks:
      - legalai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Contract Management Service
  contract-service:
    build: ./microservices/contract-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATABASE_URL=jdbc:postgresql://postgres:5432/legaldb
      - DB_USER=legaluser
      - DB_PASSWORD=legalpass
    depends_on:
      - postgres
    networks:
      - legalai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # LLM Processing Service
  llm-service:
    build: ./microservices/llm-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - REDIS_HOST=redis
      - LLAMA_BASE_URL=http://host.docker.internal:11434
    depends_on:
      - redis
    networks:
      - legalai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: legaldb
      POSTGRES_USER: legaluser
      POSTGRES_PASSWORD: legalpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - legalai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U legaluser -d legaldb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - legalai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:

networks:
  legalai-network:
    driver: bridge